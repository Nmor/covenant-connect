{
  "openapi": "3.0.0",
  "paths": {
    "/health/live": {
      "get": {
        "operationId": "HealthController_checkLiveness",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health/ready": {
      "get": {
        "operationId": "HealthController_checkReadiness",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/auth/session/{token}": {
      "get": {
        "operationId": "AuthController_getSession",
        "parameters": [
          {
            "name": "token",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/auth/providers/{provider}/authorize": {
      "get": {
        "operationId": "AuthController_startProviderLogin",
        "parameters": [
          {
            "name": "provider",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/auth/providers/{provider}/callback": {
      "post": {
        "operationId": "AuthController_providerCallback",
        "parameters": [
          {
            "name": "provider",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderCallbackDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/donations": {
      "get": {
        "operationId": "getDonations",
        "summary": "List donation records with pagination.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 25,
              "example": 25,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DonationsResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Donations"
        ]
      },
      "post": {
        "operationId": "DonationsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDonationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DonationDto"
                }
              }
            }
          }
        },
        "tags": [
          "Donations"
        ]
      }
    },
    "/donations/{id}/status": {
      "patch": {
        "operationId": "DonationsController_updateStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDonationStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DonationDto"
                }
              }
            }
          }
        },
        "tags": [
          "Donations"
        ]
      }
    },
    "/donations/webhooks/paystack": {
      "post": {
        "operationId": "DonationsController_handlePaystackWebhook",
        "parameters": [
          {
            "name": "x-paystack-signature",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Donations"
        ]
      }
    },
    "/donations/webhooks/fincra": {
      "post": {
        "operationId": "DonationsController_handleFincraWebhook",
        "parameters": [
          {
            "name": "x-fincra-signature",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Donations"
        ]
      }
    },
    "/donations/webhooks/stripe": {
      "post": {
        "operationId": "DonationsController_handleStripeWebhook",
        "parameters": [
          {
            "name": "stripe-signature",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Donations"
        ]
      }
    },
    "/donations/webhooks/flutterwave": {
      "post": {
        "operationId": "DonationsController_handleFlutterwaveWebhook",
        "parameters": [
          {
            "name": "verif-hash",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Donations"
        ]
      }
    },
    "/prayer/requests": {
      "post": {
        "operationId": "createPrayerRequest",
        "summary": "Create a new prayer request.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrayerRequestDto"
                }
              }
            }
          }
        },
        "tags": [
          "Prayer"
        ]
      },
      "get": {
        "operationId": "getPrayerRequests",
        "summary": "List prayer requests for follow-up.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrayerRequestsResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Prayer"
        ]
      }
    },
    "/prayer/requests/{id}": {
      "patch": {
        "operationId": "PrayerController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrayerRequestDto"
                }
              }
            }
          }
        },
        "tags": [
          "Prayer"
        ]
      }
    },
    "/events": {
      "get": {
        "operationId": "getEvents",
        "summary": "List upcoming events with pagination.",
        "parameters": [
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "schema": {
              "example": 25,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Events"
        ]
      },
      "post": {
        "operationId": "EventsController_create",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDto"
                }
              }
            }
          }
        },
        "tags": [
          "Events"
        ]
      }
    },
    "/events/{id}": {
      "patch": {
        "operationId": "EventsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDto"
                }
              }
            }
          }
        },
        "tags": [
          "Events"
        ]
      }
    },
    "/events/calendar.ics": {
      "get": {
        "operationId": "EventsController_downloadCalendar",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Events"
        ]
      }
    },
    "/reports/dashboard": {
      "get": {
        "operationId": "getDashboardReport",
        "summary": "Retrieve KPI metrics for the dashboard view.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Reports"
        ]
      }
    },
    "/content/home": {
      "get": {
        "operationId": "getHomeContent",
        "summary": "Fetch marketing content for the public home page.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeContentDto"
                }
              }
            }
          }
        },
        "tags": [
          "Content"
        ]
      },
      "put": {
        "operationId": "ContentController_updateHome",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeContentDto"
                }
              }
            }
          }
        },
        "tags": [
          "Content"
        ]
      }
    },
    "/content/sermons": {
      "get": {
        "operationId": "ContentController_listSermons",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Content"
        ]
      },
      "post": {
        "operationId": "ContentController_addSermon",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Content"
        ]
      }
    },
    "/churches": {
      "post": {
        "operationId": "ChurchesController_create",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "operationId": "ChurchesController_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/churches/{id}": {
      "get": {
        "operationId": "ChurchesController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "ChurchesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/email/providers": {
      "get": {
        "operationId": "EmailController_listProviders",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "EmailController_upsertProvider",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/email/providers/{id}/activate": {
      "patch": {
        "operationId": "EmailController_activate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/email/send": {
      "post": {
        "operationId": "EmailController_send",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/integrations": {
      "get": {
        "operationId": "IntegrationsController_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "IntegrationsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIntegrationSettingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/integrations/{provider}": {
      "get": {
        "operationId": "IntegrationsController_get",
        "parameters": [
          {
            "name": "provider",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "IntegrationsController_update",
        "parameters": [
          {
            "name": "provider",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIntegrationSettingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "IntegrationsController_remove",
        "parameters": [
          {
            "name": "provider",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "operationId": "TasksController_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "TasksController_enqueue",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    }
  },
  "info": {
    "title": "Covenant Connect API",
    "description": "OpenAPI documentation for the Covenant Connect backend services.",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "RegisterDto": {
        "type": "object",
        "properties": {}
      },
      "LoginDto": {
        "type": "object",
        "properties": {}
      },
      "ProviderCallbackDto": {
        "type": "object",
        "properties": {}
      },
      "DonationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "don-1"
          },
          "memberId": {
            "type": "string",
            "nullable": true,
            "example": "member-1"
          },
          "amount": {
            "type": "number",
            "example": 125
          },
          "currency": {
            "type": "string",
            "example": "USD"
          },
          "provider": {
            "type": "string",
            "enum": [
              "paystack",
              "fincra",
              "stripe",
              "flutterwave"
            ],
            "example": "stripe"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "failed",
              "refunded"
            ],
            "example": "completed"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "memberId",
          "amount",
          "currency",
          "provider",
          "status",
          "metadata",
          "createdAt",
          "updatedAt"
        ]
      },
      "DonationsResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DonationDto"
            }
          },
          "total": {
            "type": "number",
            "example": 120
          },
          "page": {
            "type": "number",
            "example": 1
          },
          "pageSize": {
            "type": "number",
            "example": 25
          }
        },
        "required": [
          "data",
          "total",
          "page",
          "pageSize"
        ]
      },
      "CreateDonationDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateDonationStatusDto": {
        "type": "object",
        "properties": {}
      },
      "PrayerRequestDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "prayer-1"
          },
          "requesterName": {
            "type": "string",
            "example": "John Doe"
          },
          "requesterEmail": {
            "type": "string",
            "example": "john@example.com"
          },
          "requesterPhone": {
            "type": "string",
            "example": "+15555551234"
          },
          "message": {
            "type": "string",
            "example": "Please pray for healing."
          },
          "memberId": {
            "type": "string",
            "example": "member-1"
          },
          "status": {
            "type": "string",
            "enum": [
              "new",
              "assigned",
              "praying",
              "answered"
            ],
            "example": "assigned"
          },
          "followUpAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-10T15:00:00.000Z"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "requesterName",
          "message",
          "status",
          "createdAt",
          "updatedAt"
        ]
      },
      "PrayerRequestsResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrayerRequestDto"
            }
          },
          "total": {
            "type": "number",
            "example": 12
          },
          "page": {
            "type": "number",
            "example": 1
          },
          "pageSize": {
            "type": "number",
            "example": 25
          }
        },
        "required": [
          "data",
          "total",
          "page",
          "pageSize"
        ]
      },
      "EventSegmentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "seg-1"
          },
          "name": {
            "type": "string",
            "example": "Worship"
          },
          "startOffsetMinutes": {
            "type": "number",
            "example": 0
          },
          "durationMinutes": {
            "type": "number",
            "example": 30
          },
          "ownerId": {
            "type": "object",
            "nullable": true,
            "example": "member-1"
          }
        },
        "required": [
          "id",
          "name",
          "startOffsetMinutes",
          "durationMinutes",
          "ownerId"
        ]
      },
      "EventDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "evt-123"
          },
          "title": {
            "type": "string",
            "example": "Sunday Gathering"
          },
          "description": {
            "type": "string",
            "example": "An uplifting worship experience."
          },
          "startsAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-01T18:00:00.000Z"
          },
          "endsAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-01T20:00:00.000Z"
          },
          "timezone": {
            "type": "string",
            "example": "America/New_York"
          },
          "recurrenceRule": {
            "type": "string",
            "example": "RRULE:FREQ=WEEKLY;COUNT=4"
          },
          "segments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventSegmentDto"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "location": {
            "type": "string",
            "example": "Main auditorium"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "title",
          "startsAt",
          "endsAt",
          "timezone",
          "segments",
          "tags",
          "location",
          "createdAt",
          "updatedAt"
        ]
      },
      "EventsResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventDto"
            }
          },
          "total": {
            "type": "number",
            "example": 42
          },
          "page": {
            "type": "number",
            "example": 1
          },
          "pageSize": {
            "type": "number",
            "example": 25
          }
        },
        "required": [
          "data",
          "total",
          "page",
          "pageSize"
        ]
      },
      "DashboardKpiDto": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "example": "Total Giving"
          },
          "value": {
            "type": "number",
            "example": 1250
          },
          "change": {
            "type": "number",
            "example": 12.5
          }
        },
        "required": [
          "label",
          "value"
        ]
      },
      "DashboardResponseDto": {
        "type": "object",
        "properties": {
          "kpis": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DashboardKpiDto"
            }
          }
        },
        "required": [
          "kpis"
        ]
      },
      "HomeNextStepDto": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "example": "Launch admin console"
          },
          "url": {
            "type": "string",
            "example": "/dashboard"
          }
        },
        "required": [
          "label",
          "url"
        ]
      },
      "HomeContentDto": {
        "type": "object",
        "properties": {
          "heroTitle": {
            "type": "string",
            "example": "Plan services and care pathways with ease"
          },
          "heroSubtitle": {
            "type": "string",
            "example": "The TypeScript rewrite ships with modular services for worship planning, assimilation, and giving."
          },
          "highlights": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nextSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HomeNextStepDto"
            }
          }
        },
        "required": [
          "heroTitle",
          "heroSubtitle",
          "highlights",
          "nextSteps"
        ]
      },
      "CreateIntegrationSettingDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateIntegrationSettingDto": {
        "type": "object",
        "properties": {}
      }
    }
  }
}