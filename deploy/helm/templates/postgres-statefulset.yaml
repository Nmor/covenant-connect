apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "covenant-connect.postgresName" . }}
  labels:
    {{- include "covenant-connect.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgres
spec:
  serviceName: {{ include "covenant-connect.postgresName" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "covenant-connect.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgres
  template:
    metadata:
      labels:
        {{- include "covenant-connect.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: postgres
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgres.image }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.postgres.service.port }}
              name: postgres
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "covenant-connect.postgresSecretName" . }}
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "covenant-connect.postgresSecretName" . }}
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ include "covenant-connect.postgresSecretName" . }}
                  key: POSTGRES_DB
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U "$POSTGRES_USER"
            initialDelaySeconds: 30
            periodSeconds: 20
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U "$POSTGRES_USER"
            initialDelaySeconds: 10
            periodSeconds: 10
      {{- if not .Values.postgres.persistence.enabled }}
      volumes:
        - name: postgres-data
          emptyDir: {}
      {{- end }}
  {{- if .Values.postgres.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes:
          {{- toYaml .Values.postgres.persistence.accessModes | nindent 10 }}
        resources:
          requests:
            storage: {{ .Values.postgres.persistence.size }}
        {{- if .Values.postgres.persistence.storageClassName }}
        storageClassName: {{ .Values.postgres.persistence.storageClassName }}
        {{- end }}
  {{- end }}
